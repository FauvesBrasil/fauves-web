name: Deploy Backend to Railway

on:
  push:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      - name: Install deps
        run: npm ci
      - name: Generate Prisma Client
        run: npx prisma generate
      - name: Build
        run: npm run build
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      - name: Railway deploy
        env:
          RAILWAY_API_KEY: ${{ secrets.RAILWAY_API_KEY }}
        run: |
          # Login with API key
          railway login --apiKey "$RAILWAY_API_KEY"
          # If you want to specify a project/environment, set RAILWAY_PROJECT_ID and RAILWAY_ENV
          if [ -n "${{ secrets.RAILWAY_PROJECT_ID }}" ]; then
            railway link ${{ secrets.RAILWAY_PROJECT_ID }} || true
          fi
          railway up --detach
      - name: Wait for production and check /api/health
        if: ${{ secrets.PROD_URL != '' }}
        run: |
          echo "Checking backend health at $PROD_URL/api/health"
          for i in {1..12}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/api/health" || true)
            echo "Attempt $i => status=$status"
            if [ "$status" = "200" ] || [ "$status" = "204" ]; then
              echo "Health OK"
              exit 0
            fi
            sleep 5
          done
          echo "Backend health check failed" >&2
          exit 1
        env:
          PROD_URL: ${{ secrets.PROD_URL }}
      - name: Smoke test: POST /api/auth/register
        if: ${{ secrets.PROD_URL != '' }}
        run: |
          echo "Running smoke test: POST $PROD_URL/api/auth/register"
          body='{"email":"ci-smoke+'"$GITHUB_RUN_ID"'@example.com","password":"Password123!","name":"CI Smoke"}'
          status=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$PROD_URL/api/auth/register" -H "Content-Type: application/json" -d "$body" || true)
          echo "Register status: $status"
          if [[ "$status" =~ ^2 ]] || [ "$status" = "409" ]; then
            echo "Register smoke test OK (status $status)"
            exit 0
          fi
          echo "Register smoke test failed with status $status" >&2
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            payload=$(jq -n --arg s "$status" --arg u "$PROD_URL" '{text: ("[CI] Backend smoke test failed: register returned status " + $s + " on " + $u)}')
            curl -s -X POST -H 'Content-type: application/json' --data "$payload" ${{ secrets.SLACK_WEBHOOK_URL }} || true
          fi
          exit 1
        env:
          PROD_URL: ${{ secrets.PROD_URL }}
          GITHUB_RUN_ID: ${{ github.run_id }}
      - name: Cleanup: remove wrapper dist/main.js from repo
        if: ${{ always() && success() }}
        uses: actions/checkout@v4
        with:
          persist-credentials: true
      - name: Remove dist/main.js and push
        if: ${{ always() && success() }}
        run: |
          if [ -f backend/dist/main.js ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git rm -f backend/dist/main.js || true
            git commit -m "chore(ci): remove runtime wrapper dist/main.js [skip ci]" || true
            git push origin HEAD:main || true
          else
            echo "No wrapper file found, skipping cleanup"
          fi
