name: Deploy Frontend to Vercel

on:
  push:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        run: npm ci
      - name: Build
        run: npm run build
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      - name: Wait for production and check /api/health
        if: ${{ secrets.PROD_URL != '' }}
        run: |
          echo "Checking production health at $PROD_URL/api/health"
          for i in {1..12}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/api/health" || true)
            echo "Attempt $i => status=$status"
            if [ "$status" = "200" ] || [ "$status" = "204" ]; then
              echo "Health OK"
              exit 0
            fi
            sleep 5
          done
          echo "Production health check failed" >&2
          exit 1
        env:
          PROD_URL: ${{ secrets.PROD_URL }}
      - name: Smoke test: POST /api/auth/register
        if: ${{ secrets.PROD_URL != '' }}
        run: |
          echo "Running smoke test: POST $PROD_URL/api/auth/register"
          body='{"email":"ci-smoke+'"$GITHUB_RUN_ID"'@example.com","password":"Password123!","name":"CI Smoke"}'
          status=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$PROD_URL/api/auth/register" -H "Content-Type: application/json" -d "$body" || true)
          echo "Register status: $status"
          if [[ "$status" =~ ^2 ]] || [ "$status" = "409" ]; then
            echo "Register smoke test OK (status $status)"
            exit 0
          fi
          echo "Register smoke test failed with status $status" >&2
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            payload=$(jq -n --arg s "$status" --arg u "$PROD_URL" '{text: ("[CI] Smoke test failed: register returned status " + $s + " on " + $u)}')
            curl -s -X POST -H 'Content-type: application/json' --data "$payload" ${{ secrets.SLACK_WEBHOOK_URL }} || true
          fi
          exit 1
        env:
          PROD_URL: ${{ secrets.PROD_URL }}
          GITHUB_RUN_ID: ${{ github.run_id }}
